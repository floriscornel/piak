<?php
{{- if .Config.PHP.UseStrictTypes }}

declare(strict_types=1);
{{- end }}
{{- if .Config.PHP.Namespace }}

namespace {{ .Config.PHP.Namespace }};
{{- end }}
{{- if .Config.PHP.GenerateDocblocks }}

/**
{{- if .Description }}
 * {{ .Description }}
{{- else }}
 * {{ .Name }} model
{{- end }}
 * 
 * Generated by piak from OpenAPI specification
 */
{{- end }}
class {{ .Name }}
{
{{- range .Properties }}
{{- if $.Config.PHP.GenerateDocblocks }}

    /**
{{- if .Description }}
     * {{ .Description }}
{{- end }}
     * @var {{ .PHPType.DocComment }}
     */
{{- end }}
    private {{ if not .Required }}?{{ end }}{{ .PHPType.Name }} ${{ .Name | toSnake }};
{{- end }}
{{- if .Properties }}

    public function __construct(
{{- $lastIndex := sub (len .Properties) 1 }}
{{- range $index, $prop := .Properties }}
        {{ if not $prop.Required }}?{{ end }}{{ $prop.PHPType.Name }} ${{ $prop.Name | toSnake }}{{ if not $prop.Required }} = null{{ end }}{{ if ne $index $lastIndex }},{{ end }}
{{- end }}
    ) {
{{- range .Properties }}
        $this->{{ .Name | toSnake }} = ${{ .Name | toSnake }};
{{- end }}
    }
{{- end }}
{{- range .Properties }}

    public function get{{ .Name | toCamel }}(): {{ if not .Required }}?{{ end }}{{ .PHPType.Name }}
    {
        return $this->{{ .Name | toSnake }};
    }

    public function set{{ .Name | toCamel }}({{ if not .Required }}?{{ end }}{{ .PHPType.Name }} ${{ .Name | toSnake }}): self
    {
        $this->{{ .Name | toSnake }} = ${{ .Name | toSnake }};
        return $this;
    }
{{- end }}
} 